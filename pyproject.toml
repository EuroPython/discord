[build-system]
requires = ["setuptools>=61"]
build-backend = "setuptools.build_meta"

[project]
name = "europython-discord"
version = "0.1.0"
description = "All Discord-related things for the EuroPython conference"
license = "MIT"
license-files = ["LICENSE"]
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "discord-py>=2.3.1",
    "aiofiles>=24.1.0",
    "aiohttp>=3.11.16",
    "pydantic>=2.8.2",
    "unidecode>=1.3.8",
]

[dependency-groups]
dev = [
    "ansible>=10.2.0",
    "pytest>=8.3.5",
    "pytest-aiohttp>=1.1.0",
    "pytest-asyncio>=0.26.0",
    "ruff>=0.11.6",
]

[project.scripts]
run-bot = "europython_discord.bot:main"

[tool.pytest.ini_options]
asyncio_mode = "auto"

[tool.ruff]
line-length = 100

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    # don't require docstrings
    "D100", "D101", "D102", "D103", "D104", "D105", "D106", "D107",
    # don't require trailing commas everywhere (incompatible with `ruff format`)
    "COM812",
    # deprecated rules
    "UP038",
    # string formatting in exception messages and logging
    "EM101", "EM102", "TRY003", "G004",
    # require TYPE_CHECKING blocks for typing-only imports
    "TC",
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = [
    "S101",  # allow `assert` in tests
    "ANN",  # don't require type annotations in tests
    "PLR2004",  # allow magic values in tests
    "SLF001",  # allow accessing private members in tests
]
"scripts/*" = [
    "INP001"  # don't require __init__.py file
]

[tool.ruff.lint.pydocstyle]
convention = "pep257"
